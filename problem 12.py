"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2
+ 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

from math import sqrt


def get_number_of_divisors(n):
    number_of_divisors = 2

    for i in range(2, int(sqrt(n))):
        if n % i == 0:
            number_of_divisors += 2

    if sqrt(n) ** 2 == n:
        number_of_divisors += 1

    return number_of_divisors


most_divisors = 0
number = 0
k = 0

while most_divisors < 500:
    k += 1
    number += k

    if number % 2 != 0:
        continue

    if get_number_of_divisors(number) > most_divisors:
        most_divisors = get_number_of_divisors(number)

print(number)




